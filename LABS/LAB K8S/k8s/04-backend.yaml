apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: cinema
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
    - name: http
      port: 8000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: cinema
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
        - name: wait-db
          image: postgres:16-alpine
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          command:
            - sh
            - -c
            - |
              echo "Esperando a que Postgres este listo en postgres:5432 ..."
              until pg_isready -h postgres -p 5432 -U cinema -d cinema; do
                echo "Aun no listo, reintentando..."
                sleep 2
              done
              echo "Postgres listo."
      containers:
        - name: backend
          image: mnifla/cinema-backend:1.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            # DSN completo (ajusta si tu backend usa otro nombre de var)
            - name: DATABASE_URL
              value: postgresql+psycopg2://cinema:cinema@postgres:5432/cinema
            # Variables sueltas por si tu app las usa:
            - name: DB_HOST
              value: postgres
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          readinessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 10
