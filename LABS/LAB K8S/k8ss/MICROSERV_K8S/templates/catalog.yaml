
apiVersion: v1
kind: Service
metadata:
  name: catalog
  namespace: {{ .Values.namespace }}
  labels: { app: catalog }
spec:
  ports:
    - port: 8000
      targetPort: 8000
      name: http
  selector:
    app: catalog
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog
  namespace: {{ .Values.namespace }}
  labels: { app: catalog }
spec:
  replicas: {{ .Values.catalog.replicas }}
  selector:
    matchLabels: { app: catalog }
  template:
    metadata:
      labels: { app: catalog }
      annotations:
        linkerd.io/inject: enabled
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["catalog"]
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: catalog
          image: {{ .Values.catalog.image.repository }}:{{ .Values.catalog.image.tag }}
          imagePullPolicy: IfNotPresent
          ports: [ { containerPort: 8000 } ]
          env:
            - name: DB_HOST
              value: postgres.{{ .Values.namespace }}.svc.cluster.local
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: "cinema"
            - name: DB_USER
              value: "catalog_user"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          readinessProbe:
            httpGet: { path: "/health", port: 8000 }
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
{{ toYaml .Values.catalog.resources | indent 12 }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: catalog
  namespace: {{ .Values.namespace }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: catalog
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
