
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: {{ .Values.namespace }}
  labels: { app: frontend }
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: http
  selector:
    app: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: {{ .Values.namespace }}
  labels: { app: frontend }
spec:
  replicas: {{ .Values.frontend.replicas }}
  selector:
    matchLabels: { app: frontend }
  template:
    metadata:
      labels: { app: frontend }
      annotations:
        linkerd.io/inject: enabled
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["frontend"]
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: frontend
          image: {{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}
          imagePullPolicy: IfNotPresent
          env:
            - name: BACKEND_BASE_URL
              value: {{ .Values.frontend.env.BACKEND_BASE_URL | quote }}
          ports: [ { containerPort: 8080 } ]
          readinessProbe:
            httpGet: { path: "/", port: 8080 }
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
{{ toYaml .Values.frontend.resources | indent 12 }}
